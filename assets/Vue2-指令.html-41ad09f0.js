import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,e as t}from"./app-8520f818.js";const e={},p=t(`<h2 id="v-for" tabindex="-1"><a class="header-anchor" href="#v-for" aria-hidden="true">#</a> v-for</h2><h4 id="in-操作符" tabindex="-1"><a class="header-anchor" href="#in-操作符" aria-hidden="true">#</a> in 操作符</h4><blockquote><p><code>v-for=&quot;alias in expression&quot;</code></p></blockquote><ul><li><strong>alias</strong> 为当前遍历的元素提供别名</li><li><strong>expression</strong> 预期值：Array | Object | number | string | <u>Iterable (2.6 新增)</u></li></ul><h6 id="不同的expression预期值对应的alias" tabindex="-1"><a class="header-anchor" href="#不同的expression预期值对应的alias" aria-hidden="true">#</a> 不同的expression预期值对应的alias</h6><ol><li><p>Array</p><p>🌰数组项</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value in array<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  {{value}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>🌰数组项 + 索引值</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(value,index) in array<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value+index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  {{ value}} {{index}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数组可以使用的alias别名仅包括上述两种值，当你再添加其它值，都将得到undefined。</p></li><li><p>Object</p><p>🌰属性值</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(propertyValue) in object<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>propertyValue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  {{propertyValue}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>🌰属性值 + 键值</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(propertyValue,key) in object<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>propertyValue+key<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  {{key}}
  {{propertyValue}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>key值？自身属性还是包括了继承属性？ 否</p><p>🌰属性值 + 键值 + 索引</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(propertyValue,key,index) in object<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>propertyValue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  {{key}}
  {{propertyValue}}
  {{index}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>​ 索引值是从 0 开始的数字值，对象其实也是散列表、映射、字典。。。</p><ol start="3"><li><p>number</p><p>🌰值</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value in 10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  {{value}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：页面显示的是 1 - 10 ，而不是 0 - 9 。</p><p>vue内部是如何处理的啦？</p><p>🌰值 + 索引</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(value,index) in 10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  {{value}}
  {{index}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种情况下，index表示的就是遍历索引值，0 - 9 。</p></li><li><p>string</p><p>字符串时，同数字一样的情况，有value和index两个属性，分别表示对应字符加索引值。</p></li></ol><h4 id="v-for-alias-of-expression" tabindex="-1"><a class="header-anchor" href="#v-for-alias-of-expression" aria-hidden="true">#</a> v-for (alias of expression) ?</h4><p>使用该模式与 in 操作符完全一致</p><h4 id="如何处理属性值为null或undefined的情况" tabindex="-1"><a class="header-anchor" href="#如何处理属性值为null或undefined的情况" aria-hidden="true">#</a> 如何处理属性值为null或undefined的情况？</h4><p>当expression存在属性值为null或undefined时，还是会执行对应循环体，页面显示为空。</p><p>实际开发时，针对这种情况需要执行【空值校验】</p><h4 id="若expression为object-属性是否包括继承属性" tabindex="-1"><a class="header-anchor" href="#若expression为object-属性是否包括继承属性" aria-hidden="true">#</a> 若expression为Object，属性是否包括继承属性？</h4><p>v-for(alias in expression) 只循环对象自身属性。</p>`,15),l=[p];function o(i,u){return n(),s("div",null,l)}const d=a(e,[["render",o],["__file","Vue2-指令.html.vue"]]);export{d as default};
