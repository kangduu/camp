const e=JSON.parse('{"key":"v-e54f5d54","path":"/browser/access-control-allow-origin.html","title":"跨域_原因与解决办法","lang":"zh-CN","frontmatter":{"title":"跨域_原因与解决办法","description":"导读（同源策略） 1995 年，网景（Nets pace）公司引入浏览器。同源策略是浏览器的行为，是为了保护本地数据不被 JavaScript 代码获取回来的数据污染，因此拦截的是客户端发出的请求回来的数据接收，即请求发送了，服务器响应了，但是无法被浏览器接收。 含义： 甲网页设置的 Cookie、localStorage 等限制的内容，乙网页不可获取。 目的：保护用户数据安全，防止恶意的网站窃取数据。 同源 不同网址是否同源，必须满足以下【三个相同】","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/camps/browser/access-control-allow-origin.html"}],["meta",{"property":"og:site_name","content":"杜同学日记"}],["meta",{"property":"og:title","content":"跨域_原因与解决办法"}],["meta",{"property":"og:description","content":"导读（同源策略） 1995 年，网景（Nets pace）公司引入浏览器。同源策略是浏览器的行为，是为了保护本地数据不被 JavaScript 代码获取回来的数据污染，因此拦截的是客户端发出的请求回来的数据接收，即请求发送了，服务器响应了，但是无法被浏览器接收。 含义： 甲网页设置的 Cookie、localStorage 等限制的内容，乙网页不可获取。 目的：保护用户数据安全，防止恶意的网站窃取数据。 同源 不同网址是否同源，必须满足以下【三个相同】"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-23T02:30:30.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2024-12-23T02:30:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"跨域_原因与解决办法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-23T02:30:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":2,"title":"导读（同源策略）","slug":"导读-同源策略","link":"#导读-同源策略","children":[{"level":3,"title":"同源","slug":"同源","link":"#同源","children":[]},{"level":3,"title":"限制行为","slug":"限制行为","link":"#限制行为","children":[]}]},{"level":2,"title":"CORS(后端解决方案)","slug":"cors-后端解决方案","link":"#cors-后端解决方案","children":[]},{"level":2,"title":"JSONP","slug":"jsonp","link":"#jsonp","children":[{"level":3,"title":"feature","slug":"feature","link":"#feature","children":[]}]},{"level":2,"title":"反向代理","slug":"反向代理","link":"#反向代理","children":[]}],"git":{"createdTime":1734847722000,"updatedTime":1734921030000,"contributors":[{"name":"dukang","email":"dk@nosugartech.com","commits":1},{"name":"kangduu","email":"dukang1127@163.com","commits":1}]},"readingTime":{"minutes":2.05,"words":616},"filePathRelative":"browser/access-control-allow-origin.md","localizedDate":"2024年12月22日","excerpt":"<h2> 导读（同源策略）</h2>\\n<p>1995 年，网景（Nets pace）公司引入浏览器。<strong>同源策略是浏览器的行为</strong>，是为了保护本地数据不被 JavaScript 代码获取回来的数据污染，因此<code>拦截的是</code>客户端发出的请求回来的数据接收，即请求发送了，服务器响应了，但是无法被浏览器接收。</p>\\n<p>含义： 甲网页设置的 Cookie、localStorage 等限制的内容，乙网页不可获取。</p>\\n<p>目的：保护用户数据安全，防止恶意的网站窃取数据。</p>\\n<h3> 同源</h3>\\n<p>不同网址是否同源，必须满足以下【三个相同】</p>","autoDesc":true}');export{e as data};
