const e=JSON.parse('{"key":"v-f7a5d28c","path":"/interview/Vue.html","title":"Vue","lang":"zh-CN","frontmatter":{"title":"Vue","description":"Vue采用了什么模型？和MVC模型有什么区别？ ​\\tvue采用的是mvvm模型。 ​\\tmvvm模型中，视图和模型无法直接通信，必须依赖View Model通信。 ​\\tViewModel模型中通常需要实现一个observer观察者，其职责就是当数据改变时（model），通知视图做更新，当视图改变（用户操作等）时，通知数据修改。 ​\\t双向数据绑定 实现数据在模型和视图的相互转换（更新）。模型--&gt;VM--&gt;视图 （数据绑定）；视图--&gt;VM--&gt;模型（事件监听） MVVM 【模型-视图-视图模型】（Model-View-ViewModel）","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/camps/interview/Vue.html"}],["meta",{"property":"og:site_name","content":"杜同学日记"}],["meta",{"property":"og:title","content":"Vue"}],["meta",{"property":"og:description","content":"Vue采用了什么模型？和MVC模型有什么区别？ ​\\tvue采用的是mvvm模型。 ​\\tmvvm模型中，视图和模型无法直接通信，必须依赖View Model通信。 ​\\tViewModel模型中通常需要实现一个observer观察者，其职责就是当数据改变时（model），通知视图做更新，当视图改变（用户操作等）时，通知数据修改。 ​\\t双向数据绑定 实现数据在模型和视图的相互转换（更新）。模型--&gt;VM--&gt;视图 （数据绑定）；视图--&gt;VM--&gt;模型（事件监听） MVVM 【模型-视图-视图模型】（Model-View-ViewModel）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-09T16:12:36.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2023-09-09T16:12:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-09T16:12:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":2,"title":"Vue采用了什么模型？和MVC模型有什么区别？","slug":"vue采用了什么模型-和mvc模型有什么区别","link":"#vue采用了什么模型-和mvc模型有什么区别","children":[]},{"level":2,"title":"说一说Vue2.x的生命周期","slug":"说一说vue2-x的生命周期","link":"#说一说vue2-x的生命周期","children":[]},{"level":2,"title":"vue2响应式原理 【深度理解vue】","slug":"vue2响应式原理-【深度理解vue】","link":"#vue2响应式原理-【深度理解vue】","children":[]},{"level":2,"title":"vue3.x的响应式原理","slug":"vue3-x的响应式原理","link":"#vue3-x的响应式原理","children":[]},{"level":2,"title":"事件绑定原理","slug":"事件绑定原理","link":"#事件绑定原理","children":[]},{"level":2,"title":"组件间通信","slug":"组件间通信","link":"#组件间通信","children":[]},{"level":2,"title":"vue里v-model指令可以缩写成什么？","slug":"vue里v-model指令可以缩写成什么","link":"#vue里v-model指令可以缩写成什么","children":[]},{"level":2,"title":"v-if和v-show","slug":"v-if和v-show","link":"#v-if和v-show","children":[]},{"level":2,"title":"组件中的data为什么是一个函数？","slug":"组件中的data为什么是一个函数","link":"#组件中的data为什么是一个函数","children":[]},{"level":2,"title":"特殊属性 key 的作用","slug":"特殊属性-key-的作用","link":"#特殊属性-key-的作用","children":[]},{"level":2,"title":"探讨computed和watch","slug":"探讨computed和watch","link":"#探讨computed和watch","children":[]},{"level":2,"title":"keep-alive的作用","slug":"keep-alive的作用","link":"#keep-alive的作用","children":[]},{"level":2,"title":"vue里有一种情况是双向绑定失效，说一说你遇到的例子，怎么解决","slug":"vue里有一种情况是双向绑定失效-说一说你遇到的例子-怎么解决","link":"#vue里有一种情况是双向绑定失效-说一说你遇到的例子-怎么解决","children":[]},{"level":2,"title":"你理解的vue路由是什么？ Vue Router","slug":"你理解的vue路由是什么-vue-router","link":"#你理解的vue路由是什么-vue-router","children":[]},{"level":2,"title":"vue和其他框架有什么区别？","slug":"vue和其他框架有什么区别","link":"#vue和其他框架有什么区别","children":[]},{"level":2,"title":"Vue全局API Vue.nextTick(handler)","slug":"vue全局api-vue-nexttick-handler","link":"#vue全局api-vue-nexttick-handler","children":[]},{"level":2,"title":"虚拟DOM","slug":"虚拟dom","link":"#虚拟dom","children":[{"level":3,"title":"编码阶段","slug":"编码阶段","link":"#编码阶段","children":[]},{"level":3,"title":"SEO优化","slug":"seo优化","link":"#seo优化","children":[]},{"level":3,"title":"打包优化","slug":"打包优化","link":"#打包优化","children":[]},{"level":3,"title":"用户体验","slug":"用户体验","link":"#用户体验","children":[]}]},{"level":2,"title":"hash路由和history路由","slug":"hash路由和history路由","link":"#hash路由和history路由","children":[]}],"git":{"createdTime":1694275956000,"updatedTime":1694275956000,"contributors":[{"name":"kangduu","email":"dukang1127@163.com","commits":1}]},"readingTime":{"minutes":13.13,"words":3938},"filePathRelative":"interview/Vue.md","localizedDate":"2023年9月9日","excerpt":"<h2> Vue采用了什么模型？和MVC模型有什么区别？</h2>\\n<p>​\\tvue采用的是mvvm模型。</p>\\n<p>​\\tmvvm模型中，视图和模型无法直接通信，必须依赖View Model通信。</p>\\n<p>​\\tViewModel模型中通常需要实现一个observer观察者，其职责就是当数据改变时（model），通知视图做更新，当视图改变（用户操作等）时，通知数据修改。</p>\\n<p>​\\t<code>双向数据绑定</code>  实现数据在模型和视图的相互转换（更新）。模型--&gt;VM--&gt;视图 （数据绑定）；视图--&gt;VM--&gt;模型（事件监听）</p>\\n<h4> MVVM 【模型-视图-视图模型】（Model-View-ViewModel）</h4>","autoDesc":true}');export{e as data};
