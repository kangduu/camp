const e=JSON.parse('{"key":"v-528e7cbb","path":"/posts/vue/Vue2-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html","title":"Vue专栏之Vue2.x的响应式原理剖析","lang":"zh-CN","frontmatter":{"title":"Vue专栏之Vue2.x的响应式原理剖析","category":"Vue","description":"简述Vue2.x的响应式原理 在Vue实例初始化数据时，遍历Vue 实例的 data 选项，并使用 Object.defineProperty 将其属性转换为 getter/setter。当页面使用了对应的属性时，会进行依赖收集（当前组件的watcher），若属性发生变化，则通知相关依赖进行更新操作（发布/订阅）。 参考—— vue.js-深入响应式原理","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/front-end-camps/posts/vue/Vue2-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"前端集训营"}],["meta",{"property":"og:title","content":"Vue专栏之Vue2.x的响应式原理剖析"}],["meta",{"property":"og:description","content":"简述Vue2.x的响应式原理 在Vue实例初始化数据时，遍历Vue 实例的 data 选项，并使用 Object.defineProperty 将其属性转换为 getter/setter。当页面使用了对应的属性时，会进行依赖收集（当前组件的watcher），若属性发生变化，则通知相关依赖进行更新操作（发布/订阅）。 参考—— vue.js-深入响应式原理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-08T08:25:45.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2023-09-08T08:25:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue专栏之Vue2.x的响应式原理剖析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-08T08:25:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":3,"title":"简述Vue2.x的响应式原理","slug":"简述vue2-x的响应式原理","link":"#简述vue2-x的响应式原理","children":[]},{"level":3,"title":"Vue2.x中如何监测数组变化","slug":"vue2-x中如何监测数组变化","link":"#vue2-x中如何监测数组变化","children":[]},{"level":3,"title":"Vue2.x响应式存在的不足","slug":"vue2-x响应式存在的不足","link":"#vue2-x响应式存在的不足","children":[]},{"level":3,"title":"思路解析图","slug":"思路解析图","link":"#思路解析图","children":[]},{"level":3,"title":"你需要格外注意的","slug":"你需要格外注意的","link":"#你需要格外注意的","children":[]},{"level":3,"title":"结束语","slug":"结束语","link":"#结束语","children":[]}],"git":{"createdTime":1694161545000,"updatedTime":1694161545000,"contributors":[{"name":"dukang","email":"dk@nosugartech.com","commits":1}]},"readingTime":{"minutes":3.36,"words":1008},"filePathRelative":"posts/vue/Vue2-响应式原理.md","localizedDate":"2023年9月8日","excerpt":"<h3> 简述Vue2.x的响应式原理</h3>\\n<p>在Vue实例初始化数据时，遍历Vue 实例的 <code>data</code> 选项，并使用 <a href=\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>Object.defineProperty</code></a> 将其属性转换为 <a href=\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Working_with_Objects#%E5%AE%9A%E4%B9%89_getters_%E4%B8%8E_setters\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">getter/setter</a>。当页面<code>使用了</code>对应的属性时，会进行依赖收集（当前组件的watcher），若属性发生变化，则通知相关依赖进行更新操作（发布/订阅）。 参考—— <a href=\\"https://cn.vuejs.org/v2/guide/reactivity.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">vue.js-深入响应式原理</a></p>","autoDesc":true}');export{e as data};
