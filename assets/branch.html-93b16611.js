const e=JSON.parse('{"key":"v-3acca4be","path":"/git/branch.html","title":"Git Branch 命名规范","lang":"zh-CN","frontmatter":{"title":"Git Branch 命名规范","index":false,"description":"在 Git 开发中，命名分支时遵循一定的规范可以帮助团队成员更容易理解分支的目的和功能。常见的分支命名约定通常会根据开发流程的不同而有所不同，但有一些通用的规则和推荐做法。以下是一些常见的分支命名约定： 主要分支（Main Branches） main 或 master：这是项目的主分支，通常包含可发布的代码。现代 Git 项目通常使用 main 作为默认主分支名称。 develop：这是开发分支，用于集成所有开发者的工作，通常在这里进行多功能的开发，直到准备好合并到 main 分支。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/camps/git/branch.html"}],["meta",{"property":"og:site_name","content":"杜同学日记"}],["meta",{"property":"og:title","content":"Git Branch 命名规范"}],["meta",{"property":"og:description","content":"在 Git 开发中，命名分支时遵循一定的规范可以帮助团队成员更容易理解分支的目的和功能。常见的分支命名约定通常会根据开发流程的不同而有所不同，但有一些通用的规则和推荐做法。以下是一些常见的分支命名约定： 主要分支（Main Branches） main 或 master：这是项目的主分支，通常包含可发布的代码。现代 Git 项目通常使用 main 作为默认主分支名称。 develop：这是开发分支，用于集成所有开发者的工作，通常在这里进行多功能的开发，直到准备好合并到 main 分支。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-13T03:40:53.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2024-12-13T03:40:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git Branch 命名规范\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-13T03:40:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":2,"title":"主要分支（Main Branches）","slug":"主要分支-main-branches","link":"#主要分支-main-branches","children":[]},{"level":2,"title":"功能分支（Feature Branches）","slug":"功能分支-feature-branches","link":"#功能分支-feature-branches","children":[]},{"level":2,"title":"修复分支（Bugfix Branches）","slug":"修复分支-bugfix-branches","link":"#修复分支-bugfix-branches","children":[]},{"level":2,"title":"发布分支（Release Branches）","slug":"发布分支-release-branches","link":"#发布分支-release-branches","children":[]},{"level":2,"title":"热修复分支（Hotfix Branches）","slug":"热修复分支-hotfix-branches","link":"#热修复分支-hotfix-branches","children":[]},{"level":2,"title":"实验性分支（Experimental Branches）","slug":"实验性分支-experimental-branches","link":"#实验性分支-experimental-branches","children":[]},{"level":2,"title":"合并分支（Merge Branches）","slug":"合并分支-merge-branches","link":"#合并分支-merge-branches","children":[]},{"level":2,"title":"命名最佳实践总结","slug":"命名最佳实践总结","link":"#命名最佳实践总结","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]}],"git":{"createdTime":1734061253000,"updatedTime":1734061253000,"contributors":[{"name":"dukang","email":"dk@nosugartech.com","commits":1}]},"readingTime":{"minutes":2.39,"words":716},"filePathRelative":"git/branch.md","localizedDate":"2024年12月13日","excerpt":"<p>在 Git 开发中，命名分支时遵循一定的规范可以帮助团队成员更容易理解分支的目的和功能。常见的分支命名约定通常会根据开发流程的不同而有所不同，但有一些通用的规则和推荐做法。以下是一些常见的分支命名约定：</p>\\n<h2> 主要分支（Main Branches）</h2>\\n<ul>\\n<li><code>main</code> 或 <code>master</code>：这是项目的主分支，通常包含可发布的代码。现代 Git 项目通常使用 <code>main</code> 作为默认主分支名称。</li>\\n<li><code>develop</code>：这是开发分支，用于集成所有开发者的工作，通常在这里进行多功能的开发，直到准备好合并到 <code>main</code> 分支。</li>\\n</ul>","autoDesc":true}');export{e as data};
