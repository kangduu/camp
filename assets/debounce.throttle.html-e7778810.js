const e=JSON.parse('{"key":"v-16fe1413","path":"/javascript/debounce.throttle.html","title":"节流和防抖","lang":"zh-CN","frontmatter":{"title":"节流和防抖","category":"javascript","description":"什么是防抖和节流？有什么区别？ 你在实际开发中肯定写过这样的业务需求，随着滚动条滚动判断滚动距离，实现导航栏固定在顶部、为页面不同业务模块添加滚动到可视区域显示动画等需求。这个时候我们的业务逻辑代码在每一次滚动事件触发时便会执行一次，而滚动事件属于高频事件，触发后则可能导致浏览器卡死，必须对其进行防抖或节流处理进而控制执行次数。 常见的需要防抖或节流预处理的事件有： 📢 鼠标事件，onmousedown 和 onmousemove，连续点击和移动 📢 输入事件，onkeyup 和 onkeydown 📢window，resize 和 scroll","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/camps/javascript/debounce.throttle.html"}],["meta",{"property":"og:site_name","content":"杜同学日记"}],["meta",{"property":"og:title","content":"节流和防抖"}],["meta",{"property":"og:description","content":"什么是防抖和节流？有什么区别？ 你在实际开发中肯定写过这样的业务需求，随着滚动条滚动判断滚动距离，实现导航栏固定在顶部、为页面不同业务模块添加滚动到可视区域显示动画等需求。这个时候我们的业务逻辑代码在每一次滚动事件触发时便会执行一次，而滚动事件属于高频事件，触发后则可能导致浏览器卡死，必须对其进行防抖或节流处理进而控制执行次数。 常见的需要防抖或节流预处理的事件有： 📢 鼠标事件，onmousedown 和 onmousemove，连续点击和移动 📢 输入事件，onkeyup 和 onkeydown 📢window，resize 和 scroll"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-28T07:50:26.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2025-02-28T07:50:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"节流和防抖\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-28T07:50:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":3,"title":"什么是防抖和节流？有什么区别？","slug":"什么是防抖和节流-有什么区别","link":"#什么是防抖和节流-有什么区别","children":[]},{"level":3,"title":"防抖实现","slug":"防抖实现","link":"#防抖实现","children":[]},{"level":3,"title":"节流实现","slug":"节流实现","link":"#节流实现","children":[]},{"level":3,"title":"underscore 中防抖和节流源码解析","slug":"underscore-中防抖和节流源码解析","link":"#underscore-中防抖和节流源码解析","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1735120333000,"updatedTime":1740729026000,"contributors":[{"name":"Seven","email":"74498826+kangduu@users.noreply.github.com","commits":1},{"name":"dukang","email":"dk@nosugartech.com","commits":1}]},"readingTime":{"minutes":4.66,"words":1399},"filePathRelative":"javascript/debounce.throttle.md","localizedDate":"2024年12月25日","excerpt":"<h3> 什么是防抖和节流？有什么区别？</h3>\\n<p>你在实际开发中肯定写过这样的业务需求，随着滚动条滚动判断滚动距离，实现导航栏固定在顶部、为页面不同业务模块添加滚动到可视区域显示动画等需求。这个时候我们的业务逻辑代码在每一次滚动事件触发时便会执行一次，而滚动事件属于高频事件，触发后则可能导致浏览器卡死，必须对其进行防抖或节流处理进而控制执行次数。</p>\\n<p>常见的需要防抖或节流预处理的事件有：</p>\\n<p>📢 鼠标事件，onmousedown 和 onmousemove，连续点击和移动</p>\\n<p>📢 输入事件，onkeyup 和 onkeydown</p>\\n<p>📢window，resize 和 scroll</p>","autoDesc":true}');export{e as data};
