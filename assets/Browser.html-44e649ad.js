const e=JSON.parse('{"key":"v-7b7d8250","path":"/interview/Browser.html","title":"Browser","lang":"zh-CN","frontmatter":{"title":"Browser","description":"客户端存储（cookie、localStorage、sessionStorage） Cookie 限制 大多数浏览器支持最大为4095字节（4kb）的Cookie； 浏览器还会限制站点可以在用户计算机上存储的Cookie数量，大部分浏览器只允许每个站点存储20个Cookie。若试图存储更多的Cookie，则最老的Cookie便会被删除； 部分浏览器会对所有站点的Cookie总数作出绝对限制，一般为300 个； cookie 设置的cookie过期时间之前一直有效，即使窗口或者浏览器关闭。 默认情况下，cookie的数据会自动的传递到服务器，服务器端也可以写cookie到客户端，可是并不是所有请求都需要Cookie，如：js、css、图片等 Cookie可设置的属性 Name ：cookie的key Value ：cookie的value Domain ：可以访问此cookie的域名 Path ：可以访问此cookie的页面路径 Expires / Max-Age ：cookie超时时间 Size ：cookie的大小 HttpOnly ： true的话则HTTP请求头中会带有此cookie信息 而且不能通过document.cookie来访问 Secure ：是否只能通过https来传递此cookie SameSite ：用来防止CSRF攻击和用户追踪 会话级别的 sessionStorage （对象） 会话级别：与浏览器当前会话相关，页面关闭，数据会自动消除。 操作方法： setItem(key,value)：添加本地存储数据； getItem(key)：通过key获取相应的Value； removeItem(key)：通过key删除本地数据； clear()：清空数据。 **永久性的 localStorage ** （对象） 数据不会随着Http 请求发送到后台服务器，存储数据的大小几乎不用考虑，HTML5的标准中要求浏览器至少要支持到4MB; 操作方法：同sessionStorage","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/camps/interview/Browser.html"}],["meta",{"property":"og:site_name","content":"杜同学日记"}],["meta",{"property":"og:title","content":"Browser"}],["meta",{"property":"og:description","content":"客户端存储（cookie、localStorage、sessionStorage） Cookie 限制 大多数浏览器支持最大为4095字节（4kb）的Cookie； 浏览器还会限制站点可以在用户计算机上存储的Cookie数量，大部分浏览器只允许每个站点存储20个Cookie。若试图存储更多的Cookie，则最老的Cookie便会被删除； 部分浏览器会对所有站点的Cookie总数作出绝对限制，一般为300 个； cookie 设置的cookie过期时间之前一直有效，即使窗口或者浏览器关闭。 默认情况下，cookie的数据会自动的传递到服务器，服务器端也可以写cookie到客户端，可是并不是所有请求都需要Cookie，如：js、css、图片等 Cookie可设置的属性 Name ：cookie的key Value ：cookie的value Domain ：可以访问此cookie的域名 Path ：可以访问此cookie的页面路径 Expires / Max-Age ：cookie超时时间 Size ：cookie的大小 HttpOnly ： true的话则HTTP请求头中会带有此cookie信息 而且不能通过document.cookie来访问 Secure ：是否只能通过https来传递此cookie SameSite ：用来防止CSRF攻击和用户追踪 会话级别的 sessionStorage （对象） 会话级别：与浏览器当前会话相关，页面关闭，数据会自动消除。 操作方法： setItem(key,value)：添加本地存储数据； getItem(key)：通过key获取相应的Value； removeItem(key)：通过key删除本地数据； clear()：清空数据。 **永久性的 localStorage ** （对象） 数据不会随着Http 请求发送到后台服务器，存储数据的大小几乎不用考虑，HTML5的标准中要求浏览器至少要支持到4MB; 操作方法：同sessionStorage"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-09T16:12:36.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2023-09-09T16:12:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Browser\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-09T16:12:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":3,"title":"客户端存储（cookie、localStorage、sessionStorage）","slug":"客户端存储-cookie、localstorage、sessionstorage","link":"#客户端存储-cookie、localstorage、sessionstorage","children":[]},{"level":3,"title":"从输入URL到页面展示的过程","slug":"从输入url到页面展示的过程","link":"#从输入url到页面展示的过程","children":[]},{"level":3,"title":"浏览器如何解析渲染网页的？","slug":"浏览器如何解析渲染网页的","link":"#浏览器如何解析渲染网页的","children":[]},{"level":3,"title":"回流和重绘","slug":"回流和重绘","link":"#回流和重绘","children":[]},{"level":3,"title":"window.load 和window.onload 有什么区别","slug":"window-load-和window-onload-有什么区别","link":"#window-load-和window-onload-有什么区别","children":[]},{"level":3,"title":"浏览器组成","slug":"浏览器组成","link":"#浏览器组成","children":[]}],"git":{"createdTime":1694275956000,"updatedTime":1694275956000,"contributors":[{"name":"kangduu","email":"dukang1127@163.com","commits":1}]},"readingTime":{"minutes":8.81,"words":2642},"filePathRelative":"interview/Browser.md","localizedDate":"2023年9月9日","excerpt":"<h3> 客户端存储（cookie、localStorage、sessionStorage）</h3>\\n<ol>\\n<li>\\n<p><strong><a href=\\"https://www.nowcoder.com/ta/front-end-interview/review?tpId=10&amp;tqId=11077&amp;query=&amp;asc=true&amp;order=&amp;page=1\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Cookie</a></strong></p>\\n<p><strong>限制</strong></p>\\n<ul>\\n<li>大多数浏览器支持最大为4095字节（<code>4kb</code>）的Cookie；</li>\\n<li>浏览器还会限制站点可以在用户计算机上<code>存储的Cookie数量</code>，大部分浏览器只允许每个站点存储20个Cookie。若试图存储更多的Cookie，则最老的Cookie便会被删除；</li>\\n<li>部分浏览器会对所有站点的<code>Cookie总数</code>作出绝对限制，一般为300 个；</li>\\n<li>cookie 设置的<code>cookie过期时间之前一直有效</code>，即使窗口或者浏览器关闭。</li>\\n<li>默认情况下，cookie的<code>数据会自动的传递到服务器</code>，服务器端也可以写cookie到客户端，可是并不是所有请求都需要Cookie，如：js、css、图片等</li>\\n</ul>\\n<p><strong>Cookie可设置的属性</strong></p>\\n<ul>\\n<li>Name ：cookie的key</li>\\n<li>Value ：cookie的value</li>\\n<li>Domain ：可以访问此cookie的域名</li>\\n<li>Path ：可以访问此cookie的页面路径</li>\\n<li>Expires / Max-Age ：cookie超时时间</li>\\n<li>Size ：cookie的大小</li>\\n<li>HttpOnly ： true的话则HTTP请求头中会带有此cookie信息 而且不能通过document.cookie来访问</li>\\n<li>Secure ：是否只能通过https来传递此cookie</li>\\n<li>SameSite ：用来防止CSRF攻击和用户追踪</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>会话级别的 sessionStorage</strong>  （对象）</p>\\n<p>会话级别：与浏览器当前会话相关，页面关闭，数据会自动消除。</p>\\n<p>操作方法：</p>\\n<ul>\\n<li>setItem(key,value)：添加本地存储数据；</li>\\n<li>getItem(key)：通过key获取相应的Value；</li>\\n<li>removeItem(key)：通过key删除本地数据；</li>\\n<li>clear()：清空数据。</li>\\n</ul>\\n</li>\\n<li>\\n<p>**永久性的 localStorage ** （对象）</p>\\n<p>数据不会随着Http 请求发送到后台服务器，存储数据的大小几乎不用考虑，HTML5的标准中要求浏览器至少要支持到<strong>4MB</strong>;</p>\\n<p><strong>操作方法：同sessionStorage</strong></p>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
