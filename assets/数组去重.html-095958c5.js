const n=JSON.parse('{"key":"v-091d2e87","path":"/javascript/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D.html","title":"Javascript数组去重","lang":"zh-CN","frontmatter":{"title":"Javascript数组去重","category":"javascript","description":"双重循环 function doubleLoopUniq(arr) { var result = [], //定义一个变量表示当前元素在result中是否存在 isExist =false; for (var i = 0, len = arr.length; i &lt; len; i++) { isExist = false; for (var j = 0, rLen = result.length; j &lt; rLen; j++) { if (result[j] === arr[i]) { //依次对result中的元素 和 原数组元素进行比对 isExist = true; break } } //最后判断如果不存在，则将此元素插入result !isExist &amp;&amp; result.push(arr[i]) } return result; }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/camps/javascript/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D.html"}],["meta",{"property":"og:site_name","content":"杜同学日记"}],["meta",{"property":"og:title","content":"Javascript数组去重"}],["meta",{"property":"og:description","content":"双重循环 function doubleLoopUniq(arr) { var result = [], //定义一个变量表示当前元素在result中是否存在 isExist =false; for (var i = 0, len = arr.length; i &lt; len; i++) { isExist = false; for (var j = 0, rLen = result.length; j &lt; rLen; j++) { if (result[j] === arr[i]) { //依次对result中的元素 和 原数组元素进行比对 isExist = true; break } } //最后判断如果不存在，则将此元素插入result !isExist &amp;&amp; result.push(arr[i]) } return result; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-22T03:54:51.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2024-12-22T03:54:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Javascript数组去重\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-22T03:54:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":3,"title":"双重循环","slug":"双重循环","link":"#双重循环","children":[]},{"level":3,"title":"借助js内置的indexOf","slug":"借助js内置的indexof","link":"#借助js内置的indexof","children":[]},{"level":3,"title":"排序后前后比对去重","slug":"排序后前后比对去重","link":"#排序后前后比对去重","children":[]},{"level":3,"title":"ES6的 Set","slug":"es6的-set","link":"#es6的-set","children":[]},{"level":3,"title":"利用对象属性名的唯一性","slug":"利用对象属性名的唯一性","link":"#利用对象属性名的唯一性","children":[]},{"level":3,"title":"splice 去重","slug":"splice-去重","link":"#splice-去重","children":[]}],"git":{"createdTime":1734839691000,"updatedTime":1734839691000,"contributors":[{"name":"kangduu","email":"dukang1127@163.com","commits":1}]},"readingTime":{"minutes":1.06,"words":317},"filePathRelative":"javascript/数组去重.md","localizedDate":"2024年12月22日","excerpt":"<h3> 双重循环</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">doubleLoopUniq</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">var</span> result <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token comment\\">//定义一个变量表示当前元素在result中是否存在</span>\\n      isExist <span class=\\"token operator\\">=</span><span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> len <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> len<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    isExist <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> j <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> rLen <span class=\\"token operator\\">=</span> result<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&lt;</span> rLen<span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>result<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">===</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">//依次对result中的元素 和 原数组元素进行比对</span>\\n        isExist <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">break</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">//最后判断如果不存在，则将此元素插入result</span>\\n    <span class=\\"token operator\\">!</span>isExist <span class=\\"token operator\\">&amp;&amp;</span> result<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> result<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
