import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as d,c as o,a as e,b as a,d as s,e as r}from"./app-991790b5.js";const c={},t=e("h2",{id:"学习资源",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#学习资源","aria-hidden":"true"},"#"),a(" 学习资源")],-1),h=e("h3",{id:"文档",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#文档","aria-hidden":"true"},"#"),a(" 文档")],-1),u={href:"https://wangdoc.com/bash/",target:"_blank",rel:"noopener noreferrer"},p={href:"https://www.gnu.org/software/bash/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://linuxcommand.org/",target:"_blank",rel:"noopener noreferrer"},m=e("li",null,[e("code",null,"man"),a(" 命令查看帮助：如 "),e("code",null,"man ls"),a("。")],-1),k=e("h3",{id:"练习平台",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#练习平台","aria-hidden":"true"},"#"),a(" 练习平台")],-1),v={href:"https://leetcode.cn/problemset/shell/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.codecademy.com/catalog/language/bash",target:"_blank",rel:"noopener noreferrer"},_=r(`<h2 id="什么是-shell" tabindex="-1"><a class="header-anchor" href="#什么是-shell" aria-hidden="true">#</a> 什么是 Shell</h2><p>Shell 是用户与操作系统交互的桥梁，它接受用户输入的命令并执行。</p><blockquote><p>常见的 Shell 有 Bash、Zsh、Fish 等，其中 Bash（Bourne Again Shell）是最常用的。</p></blockquote><h2 id="shell-的作用" tabindex="-1"><a class="header-anchor" href="#shell-的作用" aria-hidden="true">#</a> Shell 的作用</h2><ol><li>执行命令：如文件管理、进程管理、网络配置等。</li><li>编写脚本：自动化完成重复性任务。</li></ol><h2 id="基本命令" tabindex="-1"><a class="header-anchor" href="#基本命令" aria-hidden="true">#</a> 基本命令</h2><h3 id="文件与目录操作" tabindex="-1"><a class="header-anchor" href="#文件与目录操作" aria-hidden="true">#</a> 文件与目录操作</h3><ul><li>ls：列出当前目录内容。</li><li>cd：切换目录。</li><li>pwd：显示当前路径。</li><li>mkdir：创建目录。</li><li>rm：删除文件或目录。</li><li>cp 和 mv：复制和移动文件。</li></ul><h3 id="文件内容操作" tabindex="-1"><a class="header-anchor" href="#文件内容操作" aria-hidden="true">#</a> 文件内容操作</h3><ul><li>cat：查看文件内容。</li><li>echo：打印内容。</li><li>grep：搜索文本内容。</li><li>head 和 tail：查看文件的开头或结尾部分。</li></ul><h3 id="系统相关" tabindex="-1"><a class="header-anchor" href="#系统相关" aria-hidden="true">#</a> 系统相关</h3><ul><li>whoami：查看当前用户。</li><li>top 或 htop：查看系统进程。</li><li>df 和 du：检查磁盘空间。</li></ul><h3 id="权限管理" tabindex="-1"><a class="header-anchor" href="#权限管理" aria-hidden="true">#</a> 权限管理</h3><ul><li>chmod：修改文件权限。</li><li>chown：更改文件所有者。</li></ul><h2 id="编写-shell-脚本" tabindex="-1"><a class="header-anchor" href="#编写-shell-脚本" aria-hidden="true">#</a> 编写 Shell 脚本</h2><h3 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法</h3><ul><li>脚本文件通常以 <code>.sh</code> 结尾。</li><li>使用 <code>#!/bin/bash</code> 作为脚本的第一行（Shebang）。</li><li>使用 <code>chmod +x your_script.sh</code> 赋予可执行权限。</li></ul><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h3><ul><li>定义：<code>var_name=value</code>（不能有空格）</li><li>使用：<code>$var_name</code></li></ul><h3 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断" aria-hidden="true">#</a> 条件判断</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token punctuation">[</span> condition <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    commands
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环" tabindex="-1"><a class="header-anchor" href="#循环" aria-hidden="true">#</a> 循环</h3><ul><li>for 循环</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Number <span class="token variable">$i</span>&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>while 循环</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token punctuation">[</span> condition <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    commands
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function-name function">function_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    commands
<span class="token punctuation">}</span>
function_name  <span class="token comment"># 调用函数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="进阶技能" tabindex="-1"><a class="header-anchor" href="#进阶技能" aria-hidden="true">#</a> 进阶技能</h2><h3 id="管道和重定向" tabindex="-1"><a class="header-anchor" href="#管道和重定向" aria-hidden="true">#</a> 管道和重定向</h3><ul><li>管道：<code>|</code>，将一个命令的输出作为另一个命令的输入。</li><li>重定向：<code>&gt;</code>（覆盖）和 <code>&gt;&gt;</code>（追加）将输出保存到文件。</li></ul><h3 id="脚本调试" tabindex="-1"><a class="header-anchor" href="#脚本调试" aria-hidden="true">#</a> 脚本调试</h3><ul><li>使用 <code>bash -x your_script.sh</code> 查看执行过程。</li><li>在脚本中添加 <code>set -x</code> 启用调试模式，<code>set +x</code> 关闭。</li></ul><h3 id="处理参数" tabindex="-1"><a class="header-anchor" href="#处理参数" aria-hidden="true">#</a> 处理参数</h3><ul><li><code>$1</code>, <code>$2</code>, <code>...</code> ：脚本接收的参数。</li><li><code>$#</code> ：参数个数。</li><li><code>$@</code> 和 <code>$*</code> ：所有参数。</li></ul><h3 id="定时任务" tabindex="-1"><a class="header-anchor" href="#定时任务" aria-hidden="true">#</a> 定时任务</h3><p>使用 <code>cron</code> 设置周期性任务。<br> 使用 <code>at</code> 运行一次性任务。</p>`,37);function x(g,w){const n=i("ExternalLinkIcon");return d(),o("div",null,[t,h,e("ul",null,[e("li",null,[e("a",u,[a("Bash 阮一峰"),s(n)])]),e("li",null,[e("a",p,[a("Bash 官方文档"),s(n)])]),e("li",null,[e("a",b,[a("Linux Command Line"),s(n)])]),m]),k,e("ul",null,[e("li",null,[e("a",v,[a("LeetCode Shell 题库"),s(n)])]),e("li",null,[e("a",f,[a("Codecademy 的 Shell 教程"),s(n)])])]),_])}const B=l(c,[["render",x],["__file","index.html.vue"]]);export{B as default};
