const e=JSON.parse('{"key":"v-21e68882","path":"/ts/infer.html","title":"infer 推断","lang":"zh-CN","frontmatter":{"title":"infer 推断","description":"Why is the infer keyword needed in Typescript? 使用 infer ，TS 编译器可确保您已显式声明所有类型变量，我们看看下面的例子： type MyType&lt;T&gt; = T extends infer R ? R : any; function infer(value: string) { return value; } type InferType = MyType&lt;typeof infer&gt;; // type InferReturnType = (value: string) =&gt; string &nbsp;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/camp/ts/infer.html"}],["meta",{"property":"og:site_name","content":"杜同学日记"}],["meta",{"property":"og:title","content":"infer 推断"}],["meta",{"property":"og:description","content":"Why is the infer keyword needed in Typescript? 使用 infer ，TS 编译器可确保您已显式声明所有类型变量，我们看看下面的例子： type MyType&lt;T&gt; = T extends infer R ? R : any; function infer(value: string) { return value; } type InferType = MyType&lt;typeof infer&gt;; // type InferReturnType = (value: string) =&gt; string &nbsp;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-12T08:20:45.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2025-06-12T08:20:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"infer 推断\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-12T08:20:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":2,"title":"Why is the infer keyword needed in Typescript?","slug":"why-is-the-infer-keyword-needed-in-typescript","link":"#why-is-the-infer-keyword-needed-in-typescript","children":[]},{"level":2,"title":"巩固练习","slug":"巩固练习","link":"#巩固练习","children":[{"level":3,"title":"实现 ReturnType","slug":"实现-returntype","link":"#实现-returntype","children":[]},{"level":3,"title":"实现 Await","slug":"实现-await","link":"#实现-await","children":[]},{"level":3,"title":"返回函数的第一个参数类型","slug":"返回函数的第一个参数类型","link":"#返回函数的第一个参数类型","children":[]},{"level":3,"title":"返回数组每一个元素的类型","slug":"返回数组每一个元素的类型","link":"#返回数组每一个元素的类型","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{"createdTime":1749716445000,"updatedTime":1749716445000,"contributors":[{"name":"dukang","email":"dk@nosugartech.com","commits":1}]},"readingTime":{"minutes":2.6,"words":781},"filePathRelative":"ts/infer.md","localizedDate":"2025年6月12日","excerpt":"<h2> Why is the infer keyword needed in Typescript?</h2>\\n<p><strong>使用 infer ，TS 编译器可确保您已显式声明所有类型变量</strong>，我们看看下面的例子：</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">type</span> <span class=\\"token class-name\\">MyType<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span><span class=\\"token operator\\">&gt;</span></span> <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">T</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">infer</span></span> <span class=\\"token constant\\">R</span> <span class=\\"token operator\\">?</span> <span class=\\"token constant\\">R</span> <span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">infer</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> value<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">type</span> <span class=\\"token class-name\\">InferType</span> <span class=\\"token operator\\">=</span> MyType<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">typeof</span> infer<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// type InferReturnType = (value: string) =&gt; string</span>\\n</code></pre><div class=\\"highlight-lines\\"><div class=\\"highlight-line\\">&nbsp;</div><br><br><br><br><br><br><br></div><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
