import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as n,c as s,a as e,b as r,d as i,e as c}from"./app-008e3195.js";const l={},d=e("h3",{id:"学习视频",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#学习视频","aria-hidden":"true"},"#"),r(" 学习视频")],-1),p={href:"https://www.bilibili.com/video/BV14x4y1y7jm/?p=129&spm_id_from=pageDriver&vd_source=6b0e1843fccdba1d74c719ad0ade4a49",target:"_blank",rel:"noopener noreferrer"},_=c('<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><p>OSI 模型是 Open Systems Interconnection 模型的缩写，它是一个由国际标准化组织（ISO）制定的用于描述计算机网络体系结构的参考模型。OSI 模型将计算机网络通信划分为七个不同的层次，每个层次都有特定的功能和责任。这些层次从下到上依次是：</p><ul><li><p>物理层（Physical Layer）：负责传输比特流，即在物理媒介上传输数据的细节，如电压、光信号等。</p></li><li><p>数据链路层（Data Link Layer）：处理节点之间的直接通信，通过帧（Frame）进行数据传输，通常以 MAC 地址识别设备。</p></li><li><p>网络层（Network Layer）：负责<strong>在不同网络之间进行数据传输</strong>，通过<strong>路由器进行数据的转发和选择最佳路径</strong>。比如分组、分包、交互节点这些。</p></li><li><p>传输层（Transport Layer）：提供<strong>端到端的通信和数据传输服务</strong>，主要是 TCP（Transmission Control Protocol）和 UDP（User Datagram Protocol）。</p></li><li><p>会话层（Session Layer）：负责<strong>建立、管理和终止会话连接</strong>，处理<strong>数据交换的顺序和同步</strong>。</p></li><li><p>表示层（Presentation Layer）：负责<strong>数据的格式化、加密和压缩</strong>，以确保 <em>不同系统间的</em> <strong>数据格式兼容性</strong>。</p></li><li><p>应用层（Application Layer）：提供用户应用程序访问网络服务的接口，包括 HTTP、FTP、SMTP 等各种应用协议。</p></li></ul><p><strong>每个层次都使用下一层提供的服务，并向上一层提供服务，形成了一种层层叠加的结构</strong>。这种模型的设计使得不同的厂商可以独立地开发和实现网络设备和协议，同时也提供了一个通用的框架，使得不同的系统能够互相通信。</p><h3 id="传输过程" tabindex="-1"><a class="header-anchor" href="#传输过程" aria-hidden="true">#</a> 传输过程</h3>',5);function h(m,g){const o=t("ExternalLinkIcon");return n(),s("div",null,[d,e("p",null,[e("a",p,[r("https://www.bilibili.com/video/BV14x4y1y7jm/?p=129&spm_id_from=pageDriver&vd_source=6b0e1843fccdba1d74c719ad0ade4a49"),i(o)])]),_])}const u=a(l,[["render",h],["__file","OSI模型.html.vue"]]);export{u as default};
