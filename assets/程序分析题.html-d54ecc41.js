const t=JSON.parse(`{"key":"v-2fc4ae67","path":"/posts/javascript/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90%E9%A2%98.html","title":"试题","lang":"zh-CN","frontmatter":{"title":"试题","category":"javascript","description":"['1', '2', '3'].map(parseInt) 结果是什么？为什么？ 如何提升 JavaScript 变量的存储性能？ 访问字面量和局部变量的速度最快，访问数组元素和对象成员相对较慢; 由于局部变量存在于作用域链的起始位置，因此访问局部变量比访问跨作用域变量更快，全局变量的访问速度最慢; 嵌套的对象成员会明显影响性能，尽量少用，例如window.loacation.href;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/javascript/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"前端集训营"}],["meta",{"property":"og:title","content":"试题"}],["meta",{"property":"og:description","content":"['1', '2', '3'].map(parseInt) 结果是什么？为什么？ 如何提升 JavaScript 变量的存储性能？ 访问字面量和局部变量的速度最快，访问数组元素和对象成员相对较慢; 由于局部变量存在于作用域链的起始位置，因此访问局部变量比访问跨作用域变量更快，全局变量的访问速度最慢; 嵌套的对象成员会明显影响性能，尽量少用，例如window.loacation.href;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-08T08:25:45.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2023-09-08T08:25:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"试题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-08T08:25:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":3,"title":"['1', '2', '3'].map(parseInt) 结果是什么？为什么？","slug":"_1-2-3-map-parseint-结果是什么-为什么","link":"#_1-2-3-map-parseint-结果是什么-为什么","children":[]},{"level":3,"title":"如何提升 JavaScript 变量的存储性能？","slug":"如何提升-javascript-变量的存储性能","link":"#如何提升-javascript-变量的存储性能","children":[]},{"level":3,"title":"介绍下 Set、Map、WeakSet 和 WeakMap 的区别？","slug":"介绍下-set、map、weakset-和-weakmap-的区别","link":"#介绍下-set、map、weakset-和-weakmap-的区别","children":[]},{"level":3,"title":"ES5/ES6 的继承除了写法以外还有什么区别？","slug":"es5-es6-的继承除了写法以外还有什么区别","link":"#es5-es6-的继承除了写法以外还有什么区别","children":[]},{"level":3,"title":"setTimeout、Promise、Async/Await 的区别","slug":"settimeout、promise、async-await-的区别","link":"#settimeout、promise、async-await-的区别","children":[]},{"level":3,"title":"Async/Await 如何通过同步的方式实现异步","slug":"async-await-如何通过同步的方式实现异步","link":"#async-await-如何通过同步的方式实现异步","children":[]}],"git":{"createdTime":1694161545000,"updatedTime":1694161545000,"contributors":[{"name":"dukang","email":"dk@nosugartech.com","commits":1}]},"readingTime":{"minutes":0.82,"words":245},"filePathRelative":"posts/javascript/程序分析题.md","localizedDate":"2023年9月8日","excerpt":"<h3> ['1', '2', '3'].map(parseInt) 结果是什么？为什么？</h3>\\n<h3> 如何提升 JavaScript 变量的存储性能？</h3>\\n<p>访问<strong>字面量和局部变量</strong>的速度最快，访问<strong>数组元素和对象成员</strong>相对较慢;</p>\\n<p>由于局部变量存在于作用域链的起始位置，因此<strong>访问局部变量比访问跨作用域变量更快</strong>，全局变量的访问速度最慢;</p>\\n<p><strong>嵌套的对象成员</strong>会明显影响性能，尽量少用，例如<code>window.loacation.href</code>;</p>","autoDesc":true}`);export{t as data};
