import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r,o,c as a,a as e,b as l,d as i,e as s}from"./app-c5a91522.js";const c={},d=s('<h2 id="jwt-的几个特点" tabindex="-1"><a class="header-anchor" href="#jwt-的几个特点" aria-hidden="true">#</a> JWT 的几个特点</h2><ul><li><p>JWT 默认是不加密，但也是可以加密的。生成原始 Token 以后，可以用密钥再加密一次。</p></li><li><p>JWT 不加密的情况下，不能将秘密数据写入 JWT。</p></li><li><p>JWT 不仅可以用于认证，也可以用于交换信息。有效使用 JWT，可以降低服务器查询数据库的次数。</p></li><li><p>JWT 的最大缺点是，由于服务器不保存 session 状态，因此无法在使用过程中废止某个 token，或者更改 token 的权限。也就是说，一旦 JWT 签发了，在到期之前就会始终有效，除非服务器部署额外的逻辑。</p></li><li><p>JWT 本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限。为了减少盗用，JWT 的有效期应该设置得比较短。对于一些比较重要的权限，使用时应该再次对用户进行认证。</p></li><li><p>为了减少盗用，JWT 不应该使用 HTTP 协议明码传输，要使用 HTTPS 协议传输。</p></li></ul><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2>',3),p={href:"https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html",target:"_blank",rel:"noopener noreferrer"};function _(h,T){const n=r("ExternalLinkIcon");return o(),a("div",null,[d,e("ul",null,[e("li",null,[e("a",p,[l("JSON Web Token 入门教程 - 阮一峰"),i(n)])])])])}const m=t(c,[["render",_],["__file","jwt.html.vue"]]);export{m as default};
