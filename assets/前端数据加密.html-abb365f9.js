import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as e,e as t}from"./app-5d79530a.js";const i={},u=t(`<h3 id="导读" tabindex="-1"><a class="header-anchor" href="#导读" aria-hidden="true">#</a> 导读</h3><p>​ 浏览器与服务器之间数据的传递主要通过http协议完成，而http协议是以明文方式发送内容，不提供任何方式的加密。试想，攻击者截取了浏览器和服务器之间传输的报文，是不是就可以获取一些敏感信息了啦？所以，http不适合传输敏感信息，如信用卡号，密码等。</p><p>​ https（安全套接字层超文本传输协议）的出现，为浏览器和服务器之间的通信加密，HTTPS在HTTP的基础上加入了SSL/TSL协议，SSL依靠证书来验证服务器的身份。</p><h3 id="_7种加密方式" tabindex="-1"><a class="header-anchor" href="#_7种加密方式" aria-hidden="true">#</a> 7种加密方式</h3><blockquote><p>BASE64 MD5 SHA HMAC RSA AES ECC</p></blockquote><blockquote><p>单项加密（非可逆加密，不可解密）：MD5 SHA HMAC RSA</p></blockquote><h3 id="实际开发中如何操作" tabindex="-1"><a class="header-anchor" href="#实际开发中如何操作" aria-hidden="true">#</a> 实际开发中如何操作？</h3><ul><li>MD5</li></ul><p>传入一个字符串，会转化为唯一的字符串，不可逆。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> md5 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;js-md5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// e10adc3949ba59abbe56e057f20f883e</span>
<span class="token comment">// 始终是一个长度位32的字符串</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),r={href:"https://www.npmjs.com/package/js-md5",target:"_blank",rel:"noopener noreferrer"},d=t(`<ul><li>BASE64</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> base64 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;js-base64&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Base64

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//MTIzNDU2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">&#39;MTIzNDU2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),k={href:"https://www.npmjs.com/package/js-base64",target:"_blank",rel:"noopener noreferrer"},h=t(`<ul><li>SHA-1</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> sha1 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;sha1&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token string">&#39;123566&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">//955076f05bc0aefad4d3bdf04d217647af119542</span>
<span class="token comment">// hash value</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),m={href:"https://www.npmjs.com/package/sha1",target:"_blank",rel:"noopener noreferrer"},v=n("h3",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),s(" 参考")],-1),b={href:"https://blog.csdn.net/guxingsheng/article/details/84451430",target:"_blank",rel:"noopener noreferrer"};function _(f,g){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[n("a",r,[s("npmis"),e(a)])]),d,n("p",null,[n("a",k,[s("npmjs"),e(a)])]),h,n("p",null,[n("a",m,[s("npmis"),e(a)])]),v,n("ul",null,[n("li",null,[n("a",b,[s("http协议及前端加密方式整理"),e(a)])])])])}const x=p(i,[["render",_],["__file","前端数据加密.html.vue"]]);export{x as default};
