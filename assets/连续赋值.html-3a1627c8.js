import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e}from"./app-d2657418.js";const i={},r=e(`<h2 id="origin" tabindex="-1"><a class="header-anchor" href="#origin" aria-hidden="true">#</a> Origin</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> b <span class="token operator">=</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// a = ? , b = ?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="你应该知道的知识" tabindex="-1"><a class="header-anchor" href="#你应该知道的知识" aria-hidden="true">#</a> 你应该知道的知识</h2><h5 id="_1-赋值运算符" tabindex="-1"><a class="header-anchor" href="#_1-赋值运算符" aria-hidden="true">#</a> 1.赋值运算符 <code>=</code></h5><p>​ 在javascript中，赋值运算符是 <code>从右到左</code> （关联性）。</p>`,5),u={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",target:"_blank",rel:"noopener noreferrer"},d={id:"_2-逗号操作符",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_2-逗号操作符","aria-hidden":"true"},"#",-1),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Comma_Operator",target:"_blank",rel:"noopener noreferrer"},v=e(`<p>​ 定义：对它的每个操作数求值 <code>从左到右</code>，并<strong>返回最后一个操作数的值</strong>。</p><p>​ 优先级 1 （最低）</p><h3 id="解析为原始赋值结构" tabindex="-1"><a class="header-anchor" href="#解析为原始赋值结构" aria-hidden="true">#</a> 解析为原始赋值结构</h3><p>在遇到此情况时，应该<strong>先将其分解为简单赋值语句</strong>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> b <span class="token operator">=</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

<span class="token comment">//分解</span>
a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3 3 (在同一作用域下)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> m <span class="token operator">=</span> n <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> m <span class="token operator">===</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> n <span class="token operator">===</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>

<span class="token comment">//外部作用域下只有 n </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1" aria-hidden="true">#</a> 示例(1)</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>b<span class="token punctuation">,</span> a<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// 问，a和b的值是多少？ 为什么？</span>
<span class="token comment">/*------------
title: 析 --------------------*/</span>
<span class="token comment">// 1.对象增加属性和修改属性的方式</span>
	<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	obj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;dk&#39;</span><span class="token punctuation">;</span>
	obj<span class="token punctuation">[</span><span class="token string">&#39;sex&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;man&#39;</span><span class="token punctuation">;</span>
	obj<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 并不会报错，问题就在这里。</span>
<span class="token comment">// 2.obj[1,2] = 3; 解析</span>
	<span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// m 实际值为 1 ，参考第2点</span>
	<span class="token comment">//所以</span>
    obj<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token operator">&gt;&gt;&gt;</span>  obj<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">&gt;&gt;&gt;</span> obj<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token comment">// 3.回到题目</span>
	<span class="token comment">// 可理解代码为(实际并不是)</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
	a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">[</span>b<span class="token punctuation">,</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>b<span class="token punctuation">,</span>a<span class="token punctuation">]</span> 【<span class="token number">1</span>】
	<span class="token comment">//运行到【1】时，即是一个连续赋值的问题了。实际赋值顺序是：</span>
	<span class="token comment">// (a.) </span>
	<span class="token number">2</span><span class="token punctuation">[</span>b<span class="token punctuation">,</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>b<span class="token punctuation">,</span>a<span class="token punctuation">]</span> <span class="token comment">// 2[1,undefined] = [undefined,1] 会报错吗？ 【2】</span>
	<span class="token comment">// (b.) </span>
	b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">[</span>b<span class="token punctuation">,</span>a<span class="token punctuation">]</span> <span class="token comment">// b 是指向对象2的属性a的值, 而2[a] = [b,a],所有 b = [b,a]</span>
<span class="token comment">// 4.【2】的理解</span>
	<span class="token string">&#39;123456&#39;</span><span class="token punctuation">.</span>length <span class="token comment">// 6, 这个都能够理解。其实他就是一个包装类。</span>
	<span class="token string">&#39;123456&#39;</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">[</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span>
	
	<span class="token string">&#39;123456&#39;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>  
	<span class="token comment">//重点理解这句话,不会报错的。实际&#39;123456&#39;这个对象并不存在。可以理解为中间件。 </span>
<span class="token comment">// 5.答案</span>
	a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">undefined</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2" aria-hidden="true">#</a> 示例(2）</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> 	
<span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span> 			
a<span class="token punctuation">.</span>n <span class="token operator">=</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">m</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>	
<span class="token comment">// 问，a和b的值是多少？ 为什么？</span>
<span class="token comment">/*------------
title: 析 1--------------------*/</span>
<span class="token comment">// 拆分运算顺序 （1）a.n （2）a = {m:1} （3）a.n = a</span>
<span class="token comment">//	a.n 分配新的地址，则  { n: - }</span>
<span class="token comment">// a = { m : 1}</span>
<span class="token comment">// a.n = { m: 1 } ==&gt; {n: { m: 1} }</span>
<span class="token comment">// b=a ==&gt; b = {n: { m: 1} }</span>

<span class="token comment">/*------------
title: 析 2--------------------*/</span>
<span class="token comment">// 1.只要对变量进行赋值就会进行内存重新申请。 【1】</span>
	<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 
	a <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;boom&#39;</span>
    <span class="token punctuation">}</span>
    obj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;dik&#39;</span>
	<span class="token comment">//对象一样的，只是重新获取属性的地址.</span>
<span class="token comment">// 2.【2】</span>
	<span class="token comment">// 变量a 内存分配图</span>
    
<span class="token comment">// 3.【3】</span>
	<span class="token comment">// 变量b 内存分配图</span>
    
<span class="token comment">// 4. 在计算机中，复杂数据类型存储的都是地址，我们在取值时，都是根据地址（门牌号）去查找。</span>

<span class="token comment">// 5. a.n = a = { m: 1 }	</span>
	<span class="token comment">//执行a.n = a = { m: 1 },a.n和a都要申请新的地址，而且在Js引擎中，确实也是读到这句话就会给这个值进行内存分配。【4】</span>
	<span class="token comment">//分为三步：</span>
    <span class="token comment">// (1)</span>
	a<span class="token punctuation">.</span>n<span class="token punctuation">;</span> <span class="token comment">// a对象添加了属性n，值为undefined</span>
	<span class="token comment">// (2)</span>
	a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">m</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span>
	<span class="token comment">// (3) </span>
	a<span class="token punctuation">.</span>n <span class="token operator">=</span> a
<span class="token comment">// 6.答案</span>
	a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">m</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span>
	b <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">m</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【1】解释过程 （内存如何重新申请的）</p><p>执行 a = 1时 ，内存示意图。</p><table><thead><tr><th style="text-align:center;">地址</th><th style="text-align:center;">变量</th><th style="text-align:center;">存储值</th></tr></thead><tbody><tr><td style="text-align:center;">0x0001</td><td style="text-align:center;">a</td><td style="text-align:center;">1</td></tr></tbody></table><p>执行 a = 2 时，内存变化示意图 (原来的内存被释放？)</p><table><thead><tr><th style="text-align:center;">地址</th><th style="text-align:center;">变量</th><th style="text-align:center;">存储值</th></tr></thead><tbody><tr><td style="text-align:center;"><s>0x0001</s></td><td style="text-align:center;"><s>a</s></td><td style="text-align:center;"><s>1</s></td></tr><tr><td style="text-align:center;">0x0002</td><td style="text-align:center;">a</td><td style="text-align:center;">2</td></tr></tbody></table><p>【2】a 的内存示意图</p><table><thead><tr><th style="text-align:center;">地址</th><th style="text-align:center;">变量</th><th style="text-align:center;">存储值</th></tr></thead><tbody><tr><td style="text-align:center;">0x0001</td><td style="text-align:center;">a</td><td style="text-align:center;">0x0002</td></tr><tr><td style="text-align:center;">0x0002</td><td style="text-align:center;">a.n</td><td style="text-align:center;">1</td></tr></tbody></table><p>【3】 b的内存示意图</p><table><thead><tr><th style="text-align:center;">地址</th><th style="text-align:center;">变量</th><th style="text-align:center;">存储值</th></tr></thead><tbody><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">0x0003</td><td style="text-align:center;">b</td><td style="text-align:center;">0x0001</td></tr></tbody></table><p>【4】a.n 和 a 重新分配内存</p><table><thead><tr><th style="text-align:center;">地址</th><th style="text-align:center;">变量</th><th style="text-align:center;">存储值</th></tr></thead><tbody><tr><td style="text-align:center;">0x0001</td><td style="text-align:center;"><s>a</s></td><td style="text-align:center;"><s>0x0002</s> 0x0004</td></tr><tr><td style="text-align:center;">0x0002</td><td style="text-align:center;"><s>a.n</s></td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">0x0003</td><td style="text-align:center;">b</td><td style="text-align:center;">0x0001</td></tr><tr><td style="text-align:center;">0x0004</td><td style="text-align:center;">a.n</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">0x0005</td><td style="text-align:center;">a</td><td style="text-align:center;"></td></tr></tbody></table><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h1><ol><li><code>只要对变量进行赋值就会进行内存重新申请</code></li><li>根据运算符优先级运算分析</li></ol>`,23);function b(g,h){const a=o("ExternalLinkIcon");return c(),l("div",null,[r,n("p",null,[s("​ *注意："),n("a",u,[s("运算符的优先级"),t(a)])]),n("h5",d,[k,s(" 2."),n("a",m,[s("逗号操作符"),t(a)])]),v])}const f=p(i,[["render",b],["__file","连续赋值.html.vue"]]);export{f as default};
