const e=JSON.parse('{"key":"v-4db496ad","path":"/webpack/base.html","title":"模块打包运行原理","lang":"zh-CN","frontmatter":{"title":"模块打包运行原理","description":"webpack 模块打包运行原理？ 首先我们应该简单了解一下 webpack 的整个打包流程： 读取 webpack 的配置参数； 启动 webpack，创建 Compiler 对象并开始解析项目； 从入口文件（entry）开始解析，并且找到其导入的依赖模块，递归遍历分析，形成依赖关系树； 对不同文件类型的依赖模块文件使用对应的 Loader 进行编译，最终转为 Javascript 文件； 整个过程中 webpack 会通过发布订阅模式，向外抛出一些 hooks，而 webpack 的插件即可通过监听这些关键的事件节点，执行插件任务进而达到干预输出结果的目的。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/camp/webpack/base.html"}],["meta",{"property":"og:site_name","content":"杜同学日记"}],["meta",{"property":"og:title","content":"模块打包运行原理"}],["meta",{"property":"og:description","content":"webpack 模块打包运行原理？ 首先我们应该简单了解一下 webpack 的整个打包流程： 读取 webpack 的配置参数； 启动 webpack，创建 Compiler 对象并开始解析项目； 从入口文件（entry）开始解析，并且找到其导入的依赖模块，递归遍历分析，形成依赖关系树； 对不同文件类型的依赖模块文件使用对应的 Loader 进行编译，最终转为 Javascript 文件； 整个过程中 webpack 会通过发布订阅模式，向外抛出一些 hooks，而 webpack 的插件即可通过监听这些关键的事件节点，执行插件任务进而达到干预输出结果的目的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-28T08:21:45.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2025-03-28T08:21:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模块打包运行原理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-28T08:21:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":2,"title":"webpack 模块打包运行原理？","slug":"webpack-模块打包运行原理","link":"#webpack-模块打包运行原理","children":[]}],"git":{"createdTime":1740640672000,"updatedTime":1743150105000,"contributors":[{"name":"Seven","email":"74498826+kangduu@users.noreply.github.com","commits":1},{"name":"dukang","email":"dk@nosugartech.com","commits":1}]},"readingTime":{"minutes":2.63,"words":788},"filePathRelative":"webpack/base.md","localizedDate":"2025年2月27日","excerpt":"<h2> webpack 模块打包运行原理？</h2>\\n<p>首先我们应该简单了解一下 webpack 的整个打包流程：</p>\\n<ol>\\n<li>读取 webpack 的配置参数；</li>\\n<li>启动 webpack，创建 Compiler 对象并开始解析项目；</li>\\n<li>从入口文件（entry）开始解析，并且找到其导入的依赖模块，递归遍历分析，形成依赖关系树；</li>\\n<li>对不同文件类型的依赖模块文件使用对应的 Loader 进行编译，最终转为 Javascript 文件；</li>\\n<li>整个过程中 webpack 会通过发布订阅模式，向外抛出一些 hooks，而 webpack 的插件即可通过监听这些关键的事件节点，执行插件任务进而达到干预输出结果的目的。</li>\\n</ol>","autoDesc":true}');export{e as data};
