import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as t,c,a as e,b as a,d as s,e as d}from"./app-ec8b5cef.js";const i={},p=d(`<h2 id="source-map" tabindex="-1"><a class="header-anchor" href="#source-map" aria-hidden="true">#</a> Source Map</h2><p>❓ 为什么需要 source map</p><blockquote><p>当 webpack 打包源代码时，可能会很难追踪到错误和警告在源代码中的原始位置。例如，如果将三个源文件（a.js，b.js 和 c.js）打包到一个 bundle（bundle.js）中，而其中一个源文件包含错误，那么堆栈跟踪就会直接指向到 bundle.js，却无法准确知道错误来自于哪个源文件，所以这种提示通常无法提供太多帮助。</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&quot;inline-source-map&quot;</span><span class="token punctuation">,</span> <span class="token comment">// more config https://webpack.docschina.org/configuration/devtool/</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开发工具" tabindex="-1"><a class="header-anchor" href="#开发工具" aria-hidden="true">#</a> 开发工具</h2><h3 id="观察模式-watch" tabindex="-1"><a class="header-anchor" href="#观察模式-watch" aria-hidden="true">#</a> 观察模式 --watch</h3><p>虽然可以监听文件的变化，但是不能自动刷新浏览器</p>`,7),l={id:"webpack-dev-server",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#webpack-dev-server","aria-hidden":"true"},"#",-1),u={href:"https://webpack.docschina.org/guides/development/#using-webpack-dev-server",target:"_blank",rel:"noopener noreferrer"},_={href:"https://webpack.docschina.org/guides/hot-module-replacement/",target:"_blank",rel:"noopener noreferrer"},b={id:"webpack-dev-middleware",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#webpack-dev-middleware","aria-hidden":"true"},"#",-1),v={href:"https://webpack.docschina.org/guides/development/#using-webpack-dev-middleware",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,"webpack-dev-middleware 是一个包装器，它可以把 webpack 处理过的文件发送到 server。",-1),w=e("p",null,"🤔：这是否就可以实现服务端渲染？",-1);function f(g,x){const n=r("ExternalLinkIcon");return t(),c("div",null,[p,e("h3",l,[h,a(),e("a",u,[a("webpack-dev-server"),s(n)])]),e("p",null,[a("本地服务，将 bundle 写进内存，会刷新整页面"),e("a",_,[a("模块热替换"),s(n)]),a("。")]),e("h3",b,[m,a(),e("a",v,[a("webpack-dev-middleware"),s(n)])]),k,w])}const N=o(i,[["render",f],["__file","development.html.vue"]]);export{N as default};
