const a=JSON.parse('{"key":"v-25f54130","path":"/interview/%E7%BC%96%E7%A8%8B%E9%A2%98.html","title":"Programming","lang":"zh-CN","frontmatter":{"title":"Programming","description":"使用JavaScript或jQuery实现一个无限级导航栏菜单 变量交换值的四种方式（不采用中间变量） 如何让 a=1,b=2 的值交换，不可使用中间变量 算术运算 a = a + b; b = a - b; a = a - b; 异或运算 a = a ^ b; b = a ^ b; a = a ^ b; ES6解构 [a,b] = [b,a] 数组 a=[a,b]; b=a[0] a=a[1]; // 必须先赋值 b","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/interview/%E7%BC%96%E7%A8%8B%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"前端集训营"}],["meta",{"property":"og:title","content":"Programming"}],["meta",{"property":"og:description","content":"使用JavaScript或jQuery实现一个无限级导航栏菜单 变量交换值的四种方式（不采用中间变量） 如何让 a=1,b=2 的值交换，不可使用中间变量 算术运算 a = a + b; b = a - b; a = a - b; 异或运算 a = a ^ b; b = a ^ b; a = a ^ b; ES6解构 [a,b] = [b,a] 数组 a=[a,b]; b=a[0] a=a[1]; // 必须先赋值 b"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-09T16:12:36.000Z"}],["meta",{"property":"article:author","content":"kangduu"}],["meta",{"property":"article:modified_time","content":"2023-09-09T16:12:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Programming\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-09T16:12:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kangduu\\",\\"url\\":\\"https://github.com/kangduu\\"}]}"]]},"headers":[{"level":3,"title":"使用JavaScript或jQuery实现一个无限级导航栏菜单","slug":"使用javascript或jquery实现一个无限级导航栏菜单","link":"#使用javascript或jquery实现一个无限级导航栏菜单","children":[]},{"level":3,"title":"变量交换值的四种方式（不采用中间变量）","slug":"变量交换值的四种方式-不采用中间变量","link":"#变量交换值的四种方式-不采用中间变量","children":[]},{"level":3,"title":"写一个正则表达式，获取字符串中所有数字字串","slug":"写一个正则表达式-获取字符串中所有数字字串","link":"#写一个正则表达式-获取字符串中所有数字字串","children":[]},{"level":3,"title":"字符串压缩","slug":"字符串压缩","link":"#字符串压缩","children":[]},{"level":3,"title":"0的除法运算问题","slug":"_0的除法运算问题","link":"#_0的除法运算问题","children":[]},{"level":3,"title":"获取浏览器URL中查询字符串中的参数？","slug":"获取浏览器url中查询字符串中的参数","link":"#获取浏览器url中查询字符串中的参数","children":[]},{"level":3,"title":"javascript去除字符串的空格？","slug":"javascript去除字符串的空格","link":"#javascript去除字符串的空格","children":[]},{"level":3,"title":"javascript检测一个变量是String类型？","slug":"javascript检测一个变量是string类型","link":"#javascript检测一个变量是string类型","children":[]},{"level":3,"title":"js判断字符串出现最多的字符，并统计次数","slug":"js判断字符串出现最多的字符-并统计次数","link":"#js判断字符串出现最多的字符-并统计次数","children":[]},{"level":3,"title":"睡眠函数 sleep  利用Date对象","slug":"睡眠函数-sleep-利用date对象","link":"#睡眠函数-sleep-利用date对象","children":[]},{"level":3,"title":"类型判断","slug":"类型判断","link":"#类型判断","children":[]},{"level":3,"title":"洗牌（乱序算法） 一个排好序的数组打乱","slug":"洗牌-乱序算法-一个排好序的数组打乱","link":"#洗牌-乱序算法-一个排好序的数组打乱","children":[]},{"level":3,"title":"数组从小到大输出","slug":"数组从小到大输出","link":"#数组从小到大输出","children":[]},{"level":3,"title":"返回长度为N的随机数字符串函数","slug":"返回长度为n的随机数字符串函数","link":"#返回长度为n的随机数字符串函数","children":[]},{"level":3,"title":"[1, 2, 3].map(parseInt)","slug":"_1-2-3-map-parseint","link":"#_1-2-3-map-parseint","children":[]},{"level":3,"title":"给定一个字符串（数字或大小写字母）, 找出最长的对称的子串（如有多个，输出任意一个）。","slug":"给定一个字符串-数字或大小写字母-找出最长的对称的子串-如有多个-输出任意一个-。","link":"#给定一个字符串-数字或大小写字母-找出最长的对称的子串-如有多个-输出任意一个-。","children":[]},{"level":3,"title":"给定两个数字（0-9）字符串（长度不限），求他们的乘积？","slug":"给定两个数字-0-9-字符串-长度不限-求他们的乘积","link":"#给定两个数字-0-9-字符串-长度不限-求他们的乘积","children":[]}],"git":{"createdTime":1694275956000,"updatedTime":1694275956000,"contributors":[{"name":"kangduu","email":"dukang1127@163.com","commits":1}]},"readingTime":{"minutes":5.15,"words":1545},"filePathRelative":"interview/编程题.md","localizedDate":"2023年9月9日","excerpt":"<h3> 使用JavaScript或jQuery实现一个无限级导航栏菜单</h3>\\n<h3> 变量交换值的四种方式（不采用中间变量）</h3>\\n<blockquote>\\n<p>如何让 a=1,b=2 的值交换，不可使用中间变量</p>\\n</blockquote>\\n<ol>\\n<li>\\n<p>算术运算</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>a <span class=\\"token operator\\">=</span> a <span class=\\"token operator\\">+</span> b<span class=\\"token punctuation\\">;</span>\\nb <span class=\\"token operator\\">=</span> a <span class=\\"token operator\\">-</span> b<span class=\\"token punctuation\\">;</span>\\na <span class=\\"token operator\\">=</span> a <span class=\\"token operator\\">-</span> b<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>异或运算</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>a <span class=\\"token operator\\">=</span> a <span class=\\"token operator\\">^</span> b<span class=\\"token punctuation\\">;</span>\\nb <span class=\\"token operator\\">=</span> a <span class=\\"token operator\\">^</span> b<span class=\\"token punctuation\\">;</span>\\na <span class=\\"token operator\\">=</span> a <span class=\\"token operator\\">^</span> b<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>ES6解构</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token punctuation\\">[</span>a<span class=\\"token punctuation\\">,</span>b<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>b<span class=\\"token punctuation\\">,</span>a<span class=\\"token punctuation\\">]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>数组</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>a<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span>a<span class=\\"token punctuation\\">,</span>b<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\nb<span class=\\"token operator\\">=</span>a<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span>\\na<span class=\\"token operator\\">=</span>a<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 必须先赋值 b</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ol>","autoDesc":true}');export{a as data};
